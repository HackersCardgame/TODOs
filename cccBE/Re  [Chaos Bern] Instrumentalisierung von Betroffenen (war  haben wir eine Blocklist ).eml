Return-Path: <bern-bounces@chaostreff.ch>
Delivered-To: mail@marclandolt.ch
Received: from mail-lb1.adm.hostpoint.ch ([10.0.0.105])
	by popimap018.mail.hostpoint.ch with LMTP
	id mC91E0+vjl/glAAA7JE5TA
	(envelope-from <bern-bounces@chaostreff.ch>)
	for <mail@marclandolt.ch>; Tue, 20 Oct 2020 11:35:11 +0200
Received: from mxin018.mail.hostpoint.ch ([10.4.2.218])
	by mail-lb1.adm.hostpoint.ch with LMTP id oC9ZE0+vjl8lNgEA9BAvQA
	; Tue, 20 Oct 2020 11:35:11 +0200
Received: from sonne.notwork.ch ([95.128.33.41] helo=sonne.alt-f4.ch)
	by mxin018.mail.hostpoint.ch with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
	(Exim 4.92.3 (FreeBSD))
	(envelope-from <bern-bounces@chaostreff.ch>)
	id 1kUo2x-000JRP-8D
	for mail@marclandolt.ch; Tue, 20 Oct 2020 11:35:11 +0200
Received: from sonne.alt-f4.ch (localhost [IPv6:::1])
	by sonne.alt-f4.ch (Postfix) with ESMTP id A0CCA6A3A;
	Tue, 20 Oct 2020 11:35:09 +0200 (CEST)
X-Original-To: bern@chaostreff.ch
Delivered-To: bern@sonne.alt-f4.ch
Received: from mxout014.mail.hostpoint.ch (mxout014.mail.hostpoint.ch
 [IPv6:2a00:d70:0:e::314])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (Client did not present a certificate)
 by sonne.alt-f4.ch (Postfix) with ESMTPS id C78136975
 for <bern@chaostreff.ch>; Tue, 20 Oct 2020 11:35:05 +0200 (CEST)
Received: from [10.0.2.45] (helo=asmtp012.mail.hostpoint.ch)
 by mxout014.mail.hostpoint.ch with esmtp (Exim 4.92.3 (FreeBSD))
 (envelope-from <mail@marclandolt.ch>)
 id 1kUo2l-000IOc-W0; Tue, 20 Oct 2020 11:35:00 +0200
Received: from 178-82-215-219.dynamic.hispeed.ch ([178.82.215.219]
 helo=[192.168.179.118]) by asmtp012.mail.hostpoint.ch with esmtpsa
 (TLSv1.3:TLS_AES_256_GCM_SHA384:256) (Exim 4.92.3 (FreeBSD))
 (envelope-from <mail@marclandolt.ch>)
 id 1kUo2l-0005h9-RV; Tue, 20 Oct 2020 11:34:59 +0200
X-Authenticated-Sender-Id: mail@marclandolt.ch
From: "Marc jr. Landolt" <mail@marclandolt.ch>
To: bern@chaostreff.ch, kay@immerda.ch, stefan@ott.net, claudine.blum@ksa.ch, 
 ursula@away.ch, presse@ccc.de, info@fedpol.admin.ch,
 matthias.berner@kapo.ag.ch
References: <1093aa46771779e6aaa4e8012013767e@www.ludothek-aarau.ch>
 <289aa525-03b2-de37-f609-3c94e21e8f3b@marclandolt.ch>
 <4cfc7d84-2c10-cab3-0241-6b8cf71c0383@marclandolt.ch>
 <52846be2-4ad1-218a-f159-752a53059fc7@marclandolt.ch>
 <a7fd3f16-0b6b-1d72-8e1a-dcefda0aaa39@immerda.ch>
 <c6a4bef0-4221-2042-281b-69ef956159b6@marclandolt.ch>
 <6007165a-ea0e-a61c-f134-24cfbcfe6e18@immerda.ch>
 <c4ec6ff4-fd8c-d90d-e450-4a1355edf9f9@marclandolt.ch>
 <fb4fb377-0281-2e3c-bdca-bcf78e256a55@immerda.ch>
 <91e3a281-ab5c-1a4d-a474-d8511cd95572@marclandolt.ch>
 <1ea8674a-3d48-d430-7a8a-99dd9a795bee@immerda.ch>
Message-ID: <26475b3d-eb3d-914a-acc6-bbf9b1b5a9ba@marclandolt.ch>
Date: Tue, 20 Oct 2020 11:34:57 +0200
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101
 Thunderbird/78.3.3
MIME-Version: 1.0
In-Reply-To: <1ea8674a-3d48-d430-7a8a-99dd9a795bee@immerda.ch>
Subject: Re: [Chaos Bern] Instrumentalisierung von Betroffenen (war: haben
 wir eine Blocklist?)
X-BeenThere: bern@chaostreff.ch
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: Chaostreff Bern <bern.chaostreff.ch>
List-Unsubscribe: <https://sonne.alt-f4.ch/cgi-bin/mailman/options/bern>,
 <mailto:bern-request@chaostreff.ch?subject=unsubscribe>
List-Archive: <https://sonne.alt-f4.ch/cgi-bin/mailman/private/bern/>
List-Post: <mailto:bern@chaostreff.ch>
List-Help: <mailto:bern-request@chaostreff.ch?subject=help>
List-Subscribe: <https://sonne.alt-f4.ch/cgi-bin/mailman/listinfo/bern>,
 <mailto:bern-request@chaostreff.ch?subject=subscribe>
Reply-To: Chaostreff Bern <bern@chaostreff.ch>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: bern-bounces@chaostreff.ch
Sender: "Bern" <bern-bounces@chaostreff.ch>
X-Vs-State: LEGIT
X-Hostpoint-Spambox: NO

SGFsbGkgSGFsbG8gS2F5CkBGRURQT0w6IGdydW5kIHdlc2hhbGIgQ0Mgd2VpdGVyIHVudGVuICh6
d2VpIE5lbm51bmdlbikKQE1hdHRoaWFzOiBmw7xyIERpY2ggYWxsZW5mYWxscyBhdWNoIHJlbGV2
YW50IC0+IFtDdHJsLUZdIEZFRAoKMTk4MGVyIFdoaXRlSGF0J3MgZ3JlZXRzIENDQy1CRQoKU1BZ
IHZzLiBTUFkgKDE5ODQpIC0g8J+OuSBDNjQgUkVNSVggW0x1a0hhc2hdCmh0dHBzOi8vd3d3Lnlv
dXR1YmUuY29tL3dhdGNoP3Y9c1Z0SkdvYlNaS00KCkBKw7xuZ2VyZToKV2hpdGVIYXQgaXN0IG1h
biBlcnN0IHNvIHJpY2h0aWcsIHdlbm4gbWFuIGRpZSBIYWNrZXJzQ2FyZGdhbWU6Om0xMzEgCmVy
bGVkaWd0IGhhdCwgc29uc3QgaXN0IG1hbiBkdXJjaCBCbGFja0hhdCBCaWdEYXRhIGVycHJlc3Ni
YXIgdW5kIAptaXNzYnJhdWNoYmFyIGR1cmNoIFNhdGFucyBzY2h3YXJ6ZSBXZWx0LiBEYXMgZ3V0
ZSBiZWltIEJlaWNodGVuIChqZXR6dCAKbmljaHQgaW0gcmVsaWdpw7ZzZW4gc29uZGVybiBpbSB3
aXNzZW5zY2hhZnRsaWNoZW4gU2lubmUpIGlzdCwgamUgZnLDvGhlciAKbWFuIG1pdCAiQmVpY2h0
ZW4iIGJlZ2lubnQgZGVzdG8gZnLDvGhlciBtZXJrdCBtYW4sIGRhc3MgZGFzIG1laXN0ZSBEaW5n
ZSAKdW50ZXJnZXNjaG9iZW4gc2luZC4KCgpAS2F5OiBHdXQsIGRhbm4ga2FubiBpY2ggRGljaCBq
YSBqZXR6dCBhdWNoIHNjaGxlY2h0IGNhbmNlbEN1bHR1cmVuIChkYXMgClZlcmIgdm9uIENhbmNl
bCBDdWx0dXIpLgoKLT4gZGllc2VyIGdhbnplIFRleHQgd2lyZCBqZXR6dCBoYWx0IGVpbiBiaXNz
Y2hlbiB3aWUgei5CLiAiU296aWFsZSAKU3lzdGVtZSIgdm9uICJOaWtsYXMgTHVobWFubiIgd28g
bWFuIGZhc3QgamVkZXMgZHJpdHRlIGZ1Y2tpbmcgV29ydCAvIApLb256ZXB0IG5hY2hzY2hsYWdl
biBtdXNzLCBkYW1pdCBtYW4gbWluZGVzdGVucyBkaWUgZXJzdGVuIDYwIFNlaXRlbiBkZXMgCkJ1
Y2hlcyB2ZXJzdGVodCwgYWJlciBpbSBOYWNoaGluZWluIGJlcmV1ZSBpY2ggZGFzIE5hY2hzY2hs
YWdlbiBuaWNodC4KClVuZCBpY2ggaGFiZSBtaXIgNmggTcO8aGUgZ2VnZWJlbiBtw7ZnbGljaHN0
IGtlaW5lIEzDtmNoZXIgaW4gbWVpbmVyIApBcmd1bWVudGF0aW9uIG9mZmVuIHp1IGxhc3NlbiB1
bmQgPFp5bmlzbXVzPiBpY2ggYWt6ZXB0aWVyZSBuYXTDvHJsaWNoIAprZWluZSBLcml0aWssIElO
U0JFU09OREVSRSBuaWNodCB2b24gSsO8bmdlcmVuIDwvWnluaXNtdXM+CgpLYXksIHdpciBrw7Zu
bmVuIGRhcyBoaWVyIGF1ZiBkZXIgTWFpbGluZ0xpc3RlIGF1c3RyYWdlbiAoYXVzdHJhZ2VuOiAK
QXJyYXlMaXN0IDxvZmZlbnNpdmVfV8O2cnRlcj4gYWxsZW5mYWxscyBWT1JTw4RUWkxJQ0ggc3Vi
b3B0aW1hbCBnZXfDpGhsdCksIApiencuIGJpc3QgRHUgYWxsZW5mYWxscyBqw7xuZ2VyIGFscyBp
Y2ggKDE5NzgpIGFsc28gw7xiZXJsYXNzZSBpY2ggRGlyIHVuZCAKZGVyIExpc3RlIGRpZSBFbnRz
Y2hlaWR1bmcsIG9iIGhpZXIgb2RlciBtYWwgcGVyIFNreXBlLCBkZW5uIExldXRlIHp1IAp6d2lu
Z2VuIGF1Y2ggQ29udGVudCBCaXRjaCB6dSBzZWluIHfDpHJlIGRhbm4gd2llZGVyIEFycmF5TGlz
dDxHRVdBTFQ+IAp1bmQgd2VuaWdlciBBcnJheUxpc3Q8UEFJTj4uCgpGYWxscyBtYW4gZGEgamV0
enQgYWxsZW5mYWxscyBlaW5lbiB6d2VpdGVuIHNvbGNoZW4gRmFsbCBmaW5kZXQgaW0gCktvbnRl
eHQgZGVyIE1lbnNjaGVuLCBkaWUgZWluZSBCZWdhYnVuZyBhdWYgIkVEViIgaGFiZW4gdW5kIHdv
IMOkaG5saWNoZXMgCnBhc3NpZXJ0IGlzdCAoZ2VuZXJpc2NoZSBTb3ppb1BzeWNob2xvZ2llLURl
c2lnblBhdHRlcm4gLyAKSFVNSU5ULURlc2lnblBhdHRlcm4pLCBow6R0dGUgbWFuIHZlcm11dGxp
Y2ggZWluZW4gZ8O8bHRpZ2VuIFJlY2h0c2ZhbGwsIAplaW5lbiBQcsOkemVkZW56ZmFsbCAoIDwt
IGlzdC93YXIgZWluZSBFdmVudFRyaWdnZXIgLyBTZWxla3RvciBhdWYgU2F0YW5zIArDnGJlcndh
Y2h1bmcgKSB1bmQgdmVybXV0bGljaCBkYXMgaGFsYmUgUmVjaHRzc3lzdGVtIGRlciBTY2h3ZWl6
IAp6ZXItY3liZXIndCwgenVtaW5kZXN0IGltIEtvbnRleHQgUmVjaHRzZsOkbGxlIHdvIEluZm9y
bWF0aWsgYmV0ZWlsaWd0IAppc3QuIChzY2c2IEthcnRlKS4gTWlyIGdlaHQgZXMgYWJlciBuaWNo
dCBkYXJ1bSBkYXMgUmVjaHRzc3lzdGVtIHNlbGJlciAKdm9yIEdlcmljaHQgenUgc3RlbGxlbiwg
c29uZGVybiBpY2ggd2lsbCBlaW5mYWNoLCBkYXNzIEdsZWljaGFsdHJpZ2UgdW5kIApKw7xuZ2Vy
ZSBuaWNodCBkdXplbmRlIE1hbGUgYXVmIGRlciBOb3RhdWZuYWhtZSBvZGVyIGdhciBkZXIgCklu
dGVuc2l2c3RhdGlvbiBsYW5kZW4gd2llIGljaCBvZGVyIHJlZ2VsbcOkc3NpZyB2aXJ0dWVsbCBn
ZWvDtnBmdCB3ZXJkZW4gCm1pdCBpbnRlbGxpZ2Vuem1pbmRlcm5kZXIgUHN5Y2hvcGhhcm1ha2Eg
bmFjaCB1bnRlcmdlc2Nob2JlbmVtIFN0R0IgMTgwLCAKU3RHQiA1OS4uLgoKU29sbHRlIG1pciBh
YmVyIHp1IE9ocmVuIGtvbW1lbiwgZGFzcyBqw7xuZ2VyZW4gYXVjaCBTb2xjaGVzIGFuZ2V0YW4g
CndpcmQsIHfDpHJlIGVzIGRhbm4gaGFsdCBkb2NoIEFMVEVSTkFUSVZMT1MgZGEgZGVuIFJlY2h0
c3dlZyBnZWdlbiBkZW4gClN0YWF0IHp1IGJlc2NocmVpdGVuLCBkZXIgdmVybXV0bGljaCBkYW5u
IGFiZXIgbmljaHQgc3RhdHRmaW5kZW4gd8O8cmRlLCAKd2VpbCBtaWNoICRpaHJWYXRlciBkYW5u
IGVyc2NoaXNzZW4gbcO8c3N0ZTsgInp1bSBTY2h1dHogZGVzIApbU3RhYXRlc3xNTkR8TkRCfFN0
YWF0c2Fud2xhdHNjaGFmdHxLYXBvQWFyZ2F1fGFuZGVyZXIgTWl0dMOkdGVyXSIgYnp3LiAKZGVy
amVuaWdlbiBkaWUgaWhyIEFtdCBtaXNzYnJhdWNodCBoYWJlbi4KCihGdXR1cmFtYTo6R8O8bnRo
ZXI6OlN0dWRpZXJ0TklDSFRqdXMpCgpBbHNvIGhvZmZlbiB3aXIsIGRhc3MgZGFzIG51ciBlaW5l
IFBzeWNob2xvZ2llLUhhY2tpbmcgIlZvcmxlc3VuZyIgYmxlaWJ0CihiencuIHNhZ2VuIHdpciBi
ZXNzZXIgbWFsIFNvY2lhbCBFbmdpbmVlcmluZykKCgotIENvbnRlbnQgQml0Y2ggenUgc2VpbiBp
c3QgZsO8ciBbIFBzeWNob2xvZ2llIHwgSFVNSU5UIHwgUG9saXRpayB8IC4uLiBdIAplaWdlbnRs
aWNoIGRpZSBNaXRpZ2F0aW9uIGbDvHIncyBTZWN1cml0eSB0aHJvdWdoIG9ic2N1cml0eSB1bmQg
ZGFzIAprw7ZubnRlIHNvZ2FyIGF1ZiBlaW5lbSAiTmFzaCBHbGVpY2hnZXdpY2h0IiB6dSBHdW5z
dGVuIGRlciBXaGl0ZUhhdCdzIAplbmRlbiBzbyB3aWUgZXMgYXVzc2VpaHQuCgpNaW5rb3JyZWt0
IGVya2zDpHJ0IGRhcyBOYXNoR2xlaWNoZ2V3aWNodCBlaW5lbSBQb2RDYXN0IGVpbmlnZXJtYXNz
ZW4gCmJyYXVjaGJhciwgenVtaW5kZXN0IGJlc3NlciBhbHMgaWNoIGRhcyBrw7ZubnRlLgooSm9o
biBGb3JiZXMgTmFzaCwgYWZhaWsgZWluemlnZXIgIlNjaGl6by1TcGlubmVyIiBkZXIgamUgZWlu
ZW4gCk5vYmVscHJlaXMgZXJoYWx0ZW4gaGF0IGlzdCBtZWluZXIgTWVpbnVuZyBuYWNoIGVpbiBB
dXRpc3QgdW5kIGtlaW4gClNjaGl6bywgZGVyIEZpbG0gIkEgQmVhdXRpZnVsIE1pbmQiIGxvaG50
IHNpY2ggYWJlciBkZW5ub2NoKQoKLSBFcyBpc3Qgw7ZmdGVycyBtYWwgw7xibGljaCBpbSBQc3lj
aGF0cmllV2VzZW4sIGRhc3MgbWFuIGRlbiBQYXRpZW50ZW4gCm1pdCAodW5nZWjDtnJ0OiBiZWhp
bmRlcnRlciBNb25nby1Wb2xsZGVwcC0pUGF0aWVudGVuIGFuc3ByaWNodAogIC0+IG1hbiB3aWxs
IGFiZXIgbmljaHQgUGF0aWVudCBzZWluLCBtYW4gd2lsbCB6LkIuIEhhY2tlciwgCkVpbmhvcm4t
UG9ueSwgU3Bpa2UgZGVyIEJhYnlEcmFjaGVuIHVuZC9vZGVyIFN1cGVyIEhlbGQgc2VpbiBbMV0K
Ci0gSW0gUGF0aWVudGVuICJkYXMgT2JqZWt0IiwgImRhcyBTdWJqZWt0IiwgImRlbiBQcm9ibGVt
ZmFsbCIsICJkZW4gCkFsa2FpZGEtVmVyZ2V3YWx0aWdlci1UZXJyb3Jpc3RlbiBbM10iLCAiZGFz
IERpbmcgYW4gc2ljaCIgenUgc2VoZW4gCmhpbGZ0IHZvcmFsbGVtIGRlbiBzw7xuZGlnZW4gdW5k
IMOkbHRlcmVuIFsgw4RyenRlbiB8IFBmbGVnZXJuIHwgClRoZXJhcGV1dGVuIHwgRWx0ZXJuIHwg
Li4uIF0gZGFiZWkgc2ljaCBzZWxiZXIgbmljaHQgZWluZ2VzdGVoZW4genUgCm3DvHNzZW4sIGRh
c3Mgc2llIG5pY2h0IGdhbnogc28gc3VwZXIgZHVwZXIgc2luZCBbMV0gd2llIHNpZSBtZWluZW4u
CgoiSG9jaG11dCB3aXJkIChha3RpdiBuaWNodCBwYXNzaXYpIHZvciBkZW4gRmFsbCBnZXN0ZWxs
dCIuIFfDvHJkZSBtYW4gZGVuIApTw7xuZGVybiBhYmVyIG1pdCBkZXIgYsO2c2VuIGLDtnNlbiBX
YWhyaGVpdCwgTGVha3MsIFdoaXN0bGVibG93aW5nIGhlbGZlbiAKd29sbGVuIEZlaGxlciB6dSBi
ZWhlYmVuLCBow6R0dGUgZGllc2UgdW5iZXF1ZW1lIFdhaHJoZWl0IGVpbmUgS29nbml0aXZlIApE
aXNzb25hbnogenVyIEZvbGdlLiBBbHMgw7xiZXJmcmVzc2VuZXIgMTk3MGVyIG9kZXIgw6RsdGVy
ZXIgQXJzY2hrb3BmIAooRXVwaGVtaXNtdXMpIHfDvHJkZSBtYW4gZGFzIG5hdMO8cmxpY2ggZ2Vy
bmUgdmVybWVpZGVuIHVuZCBmw6RuZ3QgZGFubiB3aWUgCkRvbmtleSBLb25nICgxOTgxKSBpbiBz
ZWluZXIgTWFjaHRwb3NpdGlvbiBhbiBtaXQgRsOkc3Nlcm4genUgd2VyZmVuLiAKRGllamVuaWdl
biDDpGx0ZXJuIE1lbnNjaGVuLCBkaWUgbmljaHQgdHJpZ2dlcm4gdW5kIG5pY2h0IG1pdCBGw6Rz
c2VybiB6dSAKd2VyZmVuIGJlZ2lubmVuIHNpbmQgbG9naXNjaGVyd2Vpc2UgbmljaHQgZ2VtZWlu
dC4KCklociBrZW5udCBkYXMgamE6ClJldG9ocmlzY2hlciBBdXRvbWF0aXNtdXM6CiJEZXIgUHN5
Y2hpYXRlciBpc3QgZGVyIG1pdCBkZW0gZ3LDtnNzdGVuIERhY2hzY2hhZGVuIgoKICAtPiBTcG9p
bGVyLCBLb2dudGl2aWUgRGlzc29uYW56ZW4gc2luZCBndXQgdW0gZGFzIGVpZ2VuZSBXZWx0Ymls
ZCB6dSAKZXJ3ZWl0ZXJuLCBWb2xsc3TDpG5kaWdrZWl0LCBhbGxlbmZhbGxzIG3DvHNzdGUgbWFu
IGRpZSBBbndlc2VuaGVpdCBlaW5lcyAKKy8tIGdsZWljaGFsdHJpZ2VuIE1lZGljcyBvaG5lIERh
Y2hzY2hhZGVuIHZvcnNjaHJlaWJlbi4uLgoKLSBoYXQgbWFuIHdpZSBpY2ggei5CLiBpbSBBbHRl
ciB2b24gMjAgSmFocmVuIGVpbiA1MC0xMDAgTWFubiBXaW5kb3dzIE5UIApbMl0gZ2VzY2htaXNz
ZW4gWzVdLCBrw7ZubnRlIGVzIHNlaW4sIGRhc3MgbWFuIHNvIGlyZ2VuZHdpZSBkaWUgCkF1Zm1l
cmtzYW1rZWl0IChIVU1JTlQpIGF1ZiBzaWNoIGdlem9nZW4gaGF0IG5pY2h0IG51ciBiZWkgQUJC
IFpILgoKbWFyY0BEZXNrdG9wLU11c2lrOi9tbnQvYy9Vc2Vycy9tYXJjL2hhY2tlcnNjYXJkZ2Ft
ZS5jaCQgZmlnbGV0IGhlbGZlbgogIF8gICAgICAgICAgXyAgX18KfCB8X18gICBfX198IHwvIF98
IF9fXyBfIF9fCnwgJ18gXCAvIF8gXCB8IHxfIC8gXyBcICdfIFwKfCB8IHwgfCAgX18vIHwgIF98
ICBfXy8gfCB8IHwKfF98IHxffFxfX198X3xffCAgXF9fX3xffCB8X3wKKHNpZWhlIGNjYy5kZSBD
b25ncmVzcyAmJiBQc3ljaGlhdHJpZSkKCkhhYnQgSWhyIEdsZWljaGFsdHJpZ2Ugb2RlciBKw7xu
Z2VyZSBpbSBVbWZlbGQgZGVuZW4gei5CLiBhdWNoIHN0YXR0IApBdXRpc211cyB6LkIuIFNjaGl6
b3BocmVuaWUsIEJvcmRlcmxpbmUsIFRlcnJvcmlzbXVzLCBUw6R0ZXJyb2xsZSwgLi4uIAphdWZn
ZWRyw7xja3Qgd29yZGVuIGlzdCB1bmQgaWhyIGhhYnQgc2Nob24gZ2Vuw7xnZW4gZWlnZW5lIEVy
ZmFocnVuZywgClBzeWNob2xvZ2llIFdpc3NlbiwgbmVobXQgZGllIFsgU2NoaXpvIHwgVMOkdGVy
IHwgUGF0aWVudGVuIF0tUm9sbGUgCnRlbXBvcsOkciBhdWYgRXVjaC4gRGFzIGbDvGhydCBkYW5u
IGJlaW0gUGF0aWVudGVuIGRhenUsIGRhc3MgZXIgc2Nob24gbWFsIApuaWNodCBnZXRyaWdnZXJ0
IHdpcmQgd2VnZW4gZGVyIGF1ZmdlZHLDvGNrdGVuIERpYWdub3NlIChad2FuZy0+VHJpZ2dlcikg
CnVuZCBzbyBrYW5uIGRhcyBkZW0gUGF0aWVudGVuIChkZW4gbWFuIG5pY2h0IFBhdGllbnRlbiBu
ZW5uZSBzb2xsdGUpIApoZWxmZW4gZGFzIFByb2JsZW0gYWxzIHVuYmV0ZWlsaWd0ZXIgRHJpdHRl
ciBzYWNobGljaGVyLCBhbmFseXRpc2NoZXIgCmJldHJhY2h0ZW4ga2FubiB1bmQgc28gYWxsZW5m
YWxscyBzY2huZWxsZXIgd2llZGVyIGdlc3VuZCB3aXJkLiBCZWkgbWlyIApiZWxhc3RldCBkYXMg
dGVtcG9yw6RyZSDDnGJlcm5laG1lbiBkZXIgVMOkdGVyUm9sbGUgYWJlciBtZWluICJLYXJtYSIg
CmRlc2hhbGIgZ2VodCBkYXMgYmVpIG1pciBudXIgZsO8ciBHbGVpY2hhbHRyaWdlIHVuZCBKw7xu
Z2VyZSwgc29uc3QgbGFuZGUgCmljaCB3aWVkZXIgaW4gZGVyIE5vdGF1Zm5haG1lLgoKV2VpdGVy
ZSBEaW5nZSBkaWUgYmVpIG1pciB0cmlnZ2VybiBzaW5kCi0gRmF1bGhlaXQKLSBJZ25vcmFueiBb
NF0KLSBad2FuZwoKYWJlciB2b3JhbGxlbSB3ZW5uIHNpZSBkdXJjaCDDpGx0ZXJlIE1lbnNjaGVu
IG9kZXIgTWVuc2NoZW4gaW4gZWluZXIgCk1hY2h0cG9zaXRpb24gdmVyw7xidCB3ZXJkZW4sIHdl
bm4gSsO8bmdlcmUgbWlyIHJlYWxlIFBsw7xzY2h0aWVyZSBvZGVyIAp2aXJ0dWVsbGUgS29uemVy
dGZsw7xnZWwgYW4gZGVuIEtvcGYgc2NobWVpc3NlbiBpc3QgZGFzIGtvbXBsZXR0IGkuTy4gZsO8
ciAKbWljaAoKIk1laW5lIFZhcmlhbnRlIiBWUyAiw7xibGljaGUgVmFyaWFudGUgZGVyIFBzeWNo
aWF0cmllIiA9IAoiQW50YWdvbmllcmVuZGVyIERvZ21lbnJhdW0iCihEb2dtZW5yYXVtIGltIFNp
bm5lIHZvbiBGZWxpeEBBbHRlcm5hdGl2bG9zKQoKVW5kIHp1bSBHbMO8Y2sgc3RhbGtlbiBuaWNo
dCBncmFkIGlyZ2VuZHdlbGNoZSDDpGx0ZXJlbiBQc3ljaGlhdG9yZW4gCm1laW5lbiBFbmRwb2lu
dCwgc29uc3Qgd8O8cmRlbiBkaWUgamV0enQgbm9jaCBiZXJlY2h0aWd0IFNlbGJzdGhhc3MgZ2Vn
ZW4gCnNpY2ggZW50d2lja2VuICYmIEbDpHNzZXIsIGViZC4uLgoKClsxXSBLb250cmFzdCBFZmZl
a3QgYXVmIERlcHJpdmF0aW9uIG5hY2ggei5CLiAyMCBKYWhyZW4gTmFyemlzc3Rpc2NoZW4gCk1h
Y2h0bWlzc2JyYXVjaCAoei5CLiBkdXJjaCBFbHRlcm4sIExlaHJlciwgVGhlcmFwZXV0ZW4pCgpb
Ml0gamEsIHNvcnJ5IEFzY2hlIMO8YmVyIG1laW4gSGF1cHQgZsO8cidzIFdpbmRvd3MKClszXSBH
ZW5lcmFsLVdhcnJhbnQgIlNjaGFjaHp1ZyIgZGVyIEthbnRvbmFsZW4gQmVow7ZyZGVuIEFhcmdh
dSwgbmFjaCBkZW0gCmRpZSBuYWNoIGRlbiBTbm93ZGVuIExlYWtzIGdlbWVya3QgaGF0LCBkYXNz
IGlyZ2VuZHdlbGNoZSAicnVzc2lzY2hlbiIgCkRpZW5zdGUgZWluZmFjaCBkaWVqZW5pZ2VuIGRp
ZSBzY2hvbiBGcsO8aGVyIHdhcyBnZW1lcmt0IGhhYmVuIGFscyBUw6R0ZXIgCnVuZCBIYWNrZXIg
YmVzY2hyaWZ0ZXQgaGFiZW4/ICJEYXMgUHJvYmxlbSBiZWluaGFsdGV0IGRpZSBMw7ZzdW5nIHNj
aG9uIgoKWzRdIGljaCBoYWIgMTMgSmFocmUgdm9yIFNub3dkZW4gcnVtLWdlbsO2bHQsIG1hbiB3
b2xsdGUgbmljaHQgYXVmIG1pY2ggCmjDtnJlbi4uLgoKei5CLiB3ZW5uIGVpbiAxMCBqw6Rocmln
ZXMgS2luZCAibsO2bHQiIChpbnNiZXNvbmRlcmUgd2VubiBlcyBBdXRpc211cyAKaGF0KSBuZWht
dCBkYXMgZXJuc3QKLSBhbGxlbmZhbGxzIGlzdCBldHdhcyBkcmFuCi0gc2VsYnN0IHdlbm4gZXMg
ZmFsc2NoIGlzdAotLSBoYWJ0IGlociBkZW0gS2luZGUgZXJrbMOkcnQgd2VzaGFsYiBlcyBkYSBq
ZXR6dCBldHdhcyBmYWxzY2ggCmludGVycHJldGllcnQgaGF0Ci0tIGlociBoYWJ0IFplaXQgbWl0
IGlobS9paHIgdmVyYnJhY2h0IHdhcyBkYW5uIGRlbSBLaW5kIGF1Y2ggZGFiZWkgCmhpbGZ0IHNw
w6R0ZXIgbmljaHQgZWluZW4gdGllZmVuIFNlbGJzdHdlcnQgKFByw6RSZXF1aXNpdGUgIk1hcmtl
dGluZyIpIHp1IAplbnR3aWNrZWxuIHVuZCBtaXQgZGVtIHRpZWZlbiBTZWxic3R3ZXJ0IGRhenUg
Z2V0cmllYmVuIGthbm4gCmlyZ2VuZHdlbGNoZW4gUmFtc2NoIGF1ZiBLb3N0ZW4gZGVzIENPMidz
IHp1IGthdWZlbiBkZW4gZXMgZ2FyIG5pY2h0IGJyYXVjaHQKCls1XSBvaG5lIEVEViBBdXNiaWxk
dW5nLCBvaG5lIFLDvGNraGFsdCB1bmQgb2huZSBKZW1hbmRlbiBkZW4gbWFuIGjDpHR0ZSAKdW0g
SGlsZmUgZnJhZ2VuIGvDtm5uZW4gdW5kIGRhcyBhdWNoIG5vY2ggYmVzc2VyIGFscyBkZXIgVHlw
IG1pdCBkZW0gRkggClRpdGVsIGRlciBkYW1hbHMgZsO8ciBkaWUgRURWIHZlcmFudHdvcnRsaWNo
IHdhciwgZGVuIEV4cGxvcmVyLmV4ZSBbbmljaHQgCmRlbiBGaWxlIEV4cGxvcmVyIHNvbmRlcm4g
ZGllIChhZmFpayBzZWxiZSkgQmluYXJ5IGbDvHIgZGVuIERlc2t0b3AgLyAKU3RhcnQgQnV0dG9u
Li4uXSBhdXMgZGVyIFJlZ2lzdHJ5IGdlc2NobWlzc2VuIHVuZCBkYSBlaW5mYWNoIGVpbiBjbWQu
ZXhlIApoaW4gZ2VtYWNodCB3ZWlsIGljaCBkYXMgR2Vmw7xobCBoYXR0ZSwgZGFzcyBkYXMgaXJn
bmVkd2llIGFuZ2VuZWhtZXIgCmlzdC4gS2VpbiBIZXhlbldlcmsgYWJlciBmw7xyIGVpbmVuIE5v
cm1hbGVuIFVzZXIgc8OkaGUgZXMgd2llIEhFWEVSRUkgYXVzCgptYXJjQERlc2t0b3AtTXVzaWs6
L21udC9jL1VzZXJzL21hcmMvaGFja2Vyc2NhcmRnYW1lLmNoJCBmaWdsZXQgS2F5CiAgXyAgX18K
fCB8LyAvX18gXyBfICAgXwp8ICcgLy8gX2AgfCB8IHwgfAp8IC4gXCAoX3wgfCB8X3wgfAp8X3xc
X1xfXyxffFxfXywgfAogICAgICAgICAgICB8X19fLwpJY2ggaGFzc2UgZXMsIHdlbm4gaWNoIE1l
bnNjaGVuIG5pY2h0IGluIGVpbmUgU2NodWJsYWRlIHBhY2tlbiBrYW5uIHdpZSAKRGljaC4uLiBk
YXMgZ2VodCBtaXIga29tcGxldHQgZ2VnZW4gZGVuIFN0cmljaCwgYWxsZW5mYWxscyBEaXIgYXVj
aC4gCkFsc28gaGFiIGljaCB6dW1pbmRlc3QgbWFsIERlaW5lIEVtYWlsIFByb3ZpZGVyIFdlYnNl
aXRlIGdlc3RhbGt0IMOkaG0gCsO8YmVycHLDvGZ0LCBiencgYWxzIGp1ZGVuZnJldW5kbGljaGVy
IENocmlzdGlhbmlzdCBpc3QgRmF1bGhlaXQgZsO8ciBtaWNoIAplaW5lICJUb2Rzw7xuZGUiIGJ6
dy4gdmVybXV0ZSBpY2ggYWxzICJHw7xnZ2VsaS1BbmJldGVyIiBlcyBlcyBudXIgZWluZSAKIlPD
vG5kZSIgKMO8YmxlIEF1c3JlZGUgZsO8cidzIFN0YWxrZW4gZGVyIFdlYnNlaXRlIERlaW5lcyBN
YWlsLUFjY291bnRzKQoKTWFuIGZpbmRldCBEaWNoIGVoZXIgc2NobGVjaHQgaW0gTmV0eiwgaWNo
IGjDpHR0ZSBzb2dhciBnZXNhZ3QsIGRhc3MgCkdvb2dsZSBkYSBub2NoIGludGVyYWt0aXYgZGFi
ZWkgaGlsZnQgenUgdGFybmVuLiBJY2ggc2VsYmVyIHN0ZWhlIGhpbiAKbWl0IG1laW5lbSBLbGFy
TmFtZW4gei5CLiB3ZW5uIG1hbiBkaWUgRG9tYWluICR7Vm9ybmFtZX0ke05hY2huYW1lfS5jaCAK
cmVzZXJ2aWVydCBba29tbXR8a2FtXSBkYXMgZWlnZW50bGljaCBtZWlzdCBnYW56IG9iZW4gaW4g
R29vZ2xlLiBXZW5uIER1IApqw7xuZ2VyIGJpc3QgYWxzIGljaCBpc3QgZGFzIGVpZ2VudGxpY2gg
YXVjaCBndXQuIEljaCBzZWxiZXIgaGFiZSBtaXIgZGFzIApDb25zdHJhaW50IGF1ZmVybGVndCBt
aWNoIGdlZ2Vuw7xiZXIgSsO8bmdlcmVuIGltbWVyIG1pdCBtZWluZW0gS2xhcm5hbWVuIAp1bmQg
QWRyZXNzZSB6dSB6ZWlnZW4uIEdlaGVpbWhhbHR1bmcgaXN0IGVpbiBNYWNodG1pdHRlbCwgTWFj
aHRtaXR0ZWwgCnRlbmRpZXJlbiBkYXp1IG1pc3NicmF1Y2h0IHp1IHdlcmRlbiwgc2ljIHRyYW5z
aXQgZ2xvcmlhIG11bmRpLgoKQsO2c2U6IHQ0MiBHdXQ6IHQ0MmIKKGhhY2tlcnNjYXJkZ2FtZS5j
aCB2YXJpYW50ZSB2b24gQ3liZXItRWlud2VnU3BpZWdlbG4pCgpJY2ggYmluIG1pdCBkZW0gVW1z
dGFuZCBkYXNzIGljaCBhdWYgY2EgMzBrbSB1bSBBYXJhdSByZWR1emllcnQgd3VyZGUgenUgCndl
bmlnIG5haGUgYW0gQ0NDLUJFLCBkYXNzIGljaCBEZWluZW4gTmFtZW4gZWluZW0gR2VzaWNodCB6
dXRlaWxlbiAKa8O2bm50ZS4gSW4gbGV0enRlciBaZWl0IHBhc3NpZXJ0IGVzIMO2ZnRlciBtYWwg
ZGFzcyBpY2ggaW4gUmljaHR1bmcgCkrDvG5nZXJlciBrbMOkZmZlLCBkaWUgZGFzIGdhciBuaWNo
dCB2ZXJkaWVudCBoYWJlbiwgd2VpbCBzaWUgCnVuZnJlaXdpbGxpZ2VyIE5QQyBkZXIgw7xibGlj
aGVuIFTDpHRlcnNjYWhmdCBhdXMgQWFyYXUgbWl0IEphaHJnYW5nIDE5NzAgCnVuZCDDpGx0ZXIg
c2luZC4KCldpZSBNZW5zY2hlbiB6dSB1bmZyZWl3aWxsaWdlbiBOUEMncyBnZW1hY2h0IHdlcmRl
biBpc3QgZWlnZW50bGljaCAKR2VnZW5zdGFuZCBkZXIgMzcwIEthcnRlbiBkZXMgSGFja2Vyc0Nh
cmRnYW1lLmNoIGJ6dy4gd2llIG1hbiBtaW5kZXN0ZW5zIApkaWUgSsO8bmdlcmVuIHdpZWRlciBi
ZWZyZWllbiBrYW5uLiBEYSBrb21tZW4gc293b2hsIFBzeWNob2xvZ3NpY2hlIApQYXBlcnMgYWxz
IGF1Y2ggVGVjaG5pc2NoZSBQYXBlcnMgInp1ciBBbndlbmR1bmciLgoKVW5mcmVpd2lsbGlnZSBI
YWhuZW4tS8OkbXBmZSBkaWUgZGFubiB6dW0gU2VsYnN0bMOkdWZlciB3w7xyZGVuIChiYXNpZXJl
bmQgCmF1ZiBlaW5lbSBwcmVsb2FkZWQgYW50YWdvbmllcmVuZGVuIERvZ21lblLDpHVtZW4pIGZp
bmRlbiBkaWUgYWx0ZW4gTGV1dGUgCnNjaGVpbmJhciBzYXUga29taXNjaC4gSWNoIHd1cmRlIGRh
bm4gc28gbWlyIGRlciBBYnJpY2h0dW5nIGR1cmNoIAokaWhyZUZhbWlsaWUgYXVjaCBtaXNzYnJh
dWNodCBUZXJyb3Jkcm9odW5nZW4genUgdHdpdHRlcm4sIGJ6dy4gd2FyIGljaCAKZ2VudWcgc2No
bGF1IGRpZSBUZXJyb3Jkcm9odW5nIHNvIHp1IGZvcm11bGllcmVuIHdpZSBzaWUgw7xiZXJtaXR0
ZWx0IHd1cmRlOgoKJFNocmluayBzYWd0OiAiTWFyYyBqciBMYW5kb2x0IGJld2FmZm5lbiB1bmQg
JGlocmVGYW1pbGllIGFicsOkdW1lbiIKCgotPiBkaWUgS2FudG9uc1BvbGl6ZWkgaGF0IGRhbm4g
ZGllc2UgRHJvaHVuZyBkaWUgZWlnZW50bGljaCBzY2hvbiBlaGVyIAp3aWUgZWluIFppdGF0IGF1
c2dlc2VoZW4gaGF0IHNvIGFiZ2XDpG5kZXJ0LCBkYXNzIGRhcyAiJFNocmluayBzYWd0OiIgCmVp
bmZhY2ggbmljaHQgaW5zIFByb3Rva29sbCBnZXNjaHJpZWJlbiBoYXQuIEFscyBpY2ggZGFubiBh
bmdlZnJhZ3QgCmhhYmUsIHdlc2hhbGIgZXIgZGFzIFByb3Rva29sbCBnZWbDpGxzY2h0IGhhdCwg
aGF0IGVyIGdlbcOkc3MgbWVpbmVyIApQc3ljaGlhdGVyaW4gaWhyIGFuZ2VydWZlbiB1bmQgaWhy
IGdlc2FndCBtYW4gc29sbGUgbWlyIG1laHIgCmludGVsbGlnZW56bWluZGVybmRlIFBzeWNob3Bo
YXJtYWthIHJlaW5kcsO8Y2tlbi4KClByb3Rva29sbGllcnQgaGFiZSBpY2ggZXMsIHdlaWwgaWNo
ICRkaWVFaW5lIHdhcm5lbiB3b2xsdGUsIGRhc3MgbWFuIAp2ZXJzdWNodCBtaWNoIGdlZ2VuIHNp
ZSBhdXN6dXNwaWVsZW4uIERhcyB3YXIga3VyeiBuYWNoIGRlbiBTbm93ZGVuIApMZWFrcywgd28g
a2xhciB3YXIsIGRhc3MgbmljaHQgaWNoIGljaCBkZXIgQmxhY2tIYXQgYmluLCBhbHNvIHN0ZWh0
IGRvcnQgCnNjaGVpbmJhciBpbiBkZXJlbiBIYW5kYnVjaDogIk1hY2h0IGRlbiBqZXR6dCBpcmdl
bmR3aWUgenVtIApBbGthaWRhLVZlcmdld2FsdGlnZXItVGVycm9yaXN0ZW4iIHVtIGlobiAibGVn
aXRpbSIgd2VpdGVyIGhlYWQtc2hvdHRlbiAKenUga8O2bm5lbi4KCkZhbGxzIER1IGdsZWljaGFs
dHJpZyBvZGVyIGrDvG5nZXIgYmlzdCBzdGVoZSBpY2ggZ2VybmUgUmVkZSB1bmQgQW50d29ydC4K
ClBhc3MgbWl0IHVtZ2VrZWhydGVyIFBzeWNob2xvZ2llIGF1Zi4gTWl0IEF1c3NhZ2VubG9naWsg
d2VubiBtYW4gZWluZmFjaCAKYWxsZXMgdW1rZWhydCBsYW5kZXQgbWFuIGJlaSBncsO2c3NlcmVu
IEdsZWljaHVuZ3NTeXN0ZW1lbiBtZWluZXIgTWVpbnVuZyAKbmFjaCBhdWYgd2llZGVyc3Byw7xj
aGVuLiBBdXNzZXJkZW0ga2FubiBtYW4gc293b2hsIHVtZ2VrZWhydGUgClBzeWNob2xvZ2llIGFs
cyBhdWNoIFp5bmlzbXVzIGFscyAiR2VoZWltc3ByYWNoZSIgdmVyd2VuZGVuLiBBYmVyIHouQi4g
CnZvciBlaW5lbSBHZXJpY2h0IHfDvHJkZSBpY2ggZGFzIHVudGVybGFzc2VuLCBkZW5uIG1hbiBz
aWVodCBpbSBQcm90b2tvbGwgCm5pY2h0IGFuIG9iIGRhcyBqZXR6dCBnZW5hdSBhbmRlcnMgaGVy
dW0gZ2VtZWludCBpc3QuIFtCZXRvbnVuZ10KClN0aW11bHVzLVJlc3BvbnNlLUhhYml0IHRyb24g
Yml0IGlzdFp5bmlzbXVzIFswfDFdCgpQb2xpemVpIGRvb2YgWzB8MV0KTmF6aXMgZG9vZiBbMHwx
XQpBbnRpZmEgZG9vZiBbMHwxXQoKaWNoIGhhYiBub2NoIGRhcyBGRURQT0wgKEZCSSBkZXIgU2No
d2VpeikgaW5zIENDIGdlbm9tbWVuLgpNRUlOVU5HOiBpY2ggZGVua2UgZGEga8O2bm50ZSBtYW4g
YWxsZW5mYWxscyBTeW5lcmdpZW4gbnV0emVuLiBVbmQgSkEsIGVzIApoYXQgYXVmIGJlaWRlbiBT
ZWl0ZW4gSWRpb3RlbiwgYWJlciBlcyBoYXQgYXVjaCBhdWYgYmVpZGVuIFNlaXRlbiBndXRlIApM
ZXV0ZS4KCkBGRURQT0w6IMO8YmVyIEV1cmUgZGF1ZXJiZWtpZmZ0IHTDtm5lbmRlIG3DpG5ubGlj
aGUgClRlbGVmb25aZW50cmFsZW4tVGVsZWZvbmlzdGluIG3DvHNzdGVuIHdpciBkYW5uIGFsbGVu
ZmFsbHMgbm9jaG1hbHMgCnJlZGVuLCBiencgYXVjaCBlaW4gT3BmZXIgbmFyemlzc3Rpc2NoZW4g
TWFjaHRtaXNzYnJhdWNocz8KCiNCdWdSZXBvcnQgaHR0cHM6Ly93d3cuaW1tZXJkYS5jaC9hc3Nl
dHMvZmx5ZXIucGRmCgpXZW5uIGljaCB3w6RobGVuIG3DvHNzdGUgendpc2NoZW4gTmF6aSB1bmQg
QW50aWZhIHfDpHJlIGljaCBnYW56IGtsYXIgZWluIApBbnRpZmEgV8OkaGxlciwgQUJFUiBlcyBp
c3QgZWlnZW50bGljaCBrb250cmFwcm9kdWt0aXYgZWdhbCB3ZWxjaGUgU2VpdGVuIApnZWdlbmVp
bmFuZGVyIGF1c3p1c3BpZWxlbiwgZWdhbCBvYiBQb25pZXMgVlMgQmFieURyYWNoZW4sIExpbmtz
IGdlZ2VuIApSZWNodHMsIE3DpG5kbGVpbiBWUyBXZWlibGVpbjsgcG9pbnRsZXNzLgoKUGVyZmVr
dGVzIEJlaXNwaWVsIGlzdCBkYSBkZXIgQnJ1ZGVyIG1laW5lciBbIEJlc2l0emVyaW4gCnxTa2xh
dmVudHJlaWJlcmluIHwgWnVow6RsdGVyaW4gfCBOZXJ2ZW5zw6RnZSBtaXQgbWVociBXZXJ0ZXN5
c3RlbSB8IApCZXNzZXJ3aXNzZXJpbiBtaXQgYW5nZWJlci1Eci4tVGl0ZWwgXSDDpGhtIGdsZWlj
aGF0cmlnZW4gSGVycmluCgpFciBpc3QgZGVyIMOkbHRlc3RlIFNvaG4gaW4gaWhyZXIgRmFtaWxp
ZSwgaXN0IG1laW5lcyBXaXNzZW5zIGluIGRlciAKUmVjaHRzLVJhZGlrYWxlbiBTemVuZSBnZWxh
bmRldCwgbmljaHQgd2VpbCBlciBiw7ZzZSBpc3QsIHNvbmRlcm4gd2VpbCAKJGloclZhdGVyIGlo
biBkYXp1IGdldHJpZWJlbiBoYXQuIE5hdMO8cmljaCBrYW5uICRpaHJWYXRlciB0cmllYmdlc3Rl
dWVydCAKbmljaHQgdW5iZWRpbmd0IGRlbiBUw7ZjaHRlcm4gZGllIFTDpHRlclJvbGxlIGF1ZmRy
w7xja2VuLCB1bmQgZGVtIGrDvG5nc3RlbiAKU29obiBkaWUgVMOkdGVycm9sbGUgYXVmenVkcsO8
Y2tlbiBpc3QgYXVjaCBpcmdlbmR3aWUgU2VsYnN0YmVzY2jDpGRpZ3VuZywgCmFsc28gdHJpZmZ0
IGVzIG9mdCBkZW4gw6RsdGVzdGVuIFNvaG4uCgpTbyBlaW5lIFJvbGxlIHp1IEhhdXNlIGJlaSBk
ZXIgRmFtaWxpZSBpc3QgZGFubiBuaWNodCBldHdhcyB3YXMgbWFuIApsYW5nZSBhdXNow6RsdCwg
YWxzbyBzdWNodCBtYW4gc2ljaCBlaW5lIEVyc2F0emZhbWlsaWUsIHouQi4gZWluZSAKS2lmZmVy
LUtsaWNrZSwgd28gZXMgb2Z0IGdhciBuaWNodCBwcmltw6RyIHVtcyBLaWZmZW4gZ2VodCBzb25k
ZXJuIGRhcnVtIAplaW4gbGllYmV2b2xsZXMgVW1mZWxkIHp1IGhhYmVuIGRhc3MgZWluZW0gd2Vn
ZW4gJGdlaXN0ZXNrcmFua2VuRWx0ZXJuIAp2ZXJ3ZWhydCBibGllYi4KCkF1Y2ggZ2VuZXJlbGwg
Z2VnZW4gZGllIFBvbGl6aWVpIHp1IHdldHRlcm4gaXN0IG5pY2h0IGtvcnJla3QuIApWZXJtdXRs
aWNoIHdpcmQgZGllIFN0YXRpc3RpaywgZGFzcyBIw6R1c2xpY2hlIEdld2FsdCBkdXJjaCBQb2xp
emlzdGVuIApVU0EgbWFzc2l2IGVyaMO2aHQgaXN0IHN0aW1tZW4sIGFiZXIgZXMgc2luZCBuaWNo
dCBhbGxlIFBvbGl6aXN0ZW4gYsO2c2UsIAp3ZW5uIGlociB6LkIuIGRlbiBGaWxtIEwuQS4gQ3Jh
c2ggc2NoYXV0LCBnaWJ0IGVzIGRhIGVpbmVuIGp1bmdlbiAKUG9saXppc3RlbiBkZXIgZGFzIFJp
Y2h0aWdlIG1hY2hlbiBtw7ZjaHRlLiBFciB2ZXJ1c2NodCBkaWUgTWlzc3TDpG5kZSBhdWYgCnNl
aW5lciBXYWNoZSB6dSBiZWhlYmVuLCBkZXIgRmlsbSBpc3QgYWJlciBsZWlkZXIgZWluIERyYW1h
LiA8U1BPSUxFUj4gCmVyIHdpcmQgZGFubiBpcmdlbmR3YW5uIHZvbiBkZW4gVMOkdGVybiBiZWkg
ZGVyIFBvbGl6ZWkgc2VsYmVyIHp1bSBUw6R0ZXIgCmdlbWFjaHQuIDwvU1BPSUxFUj4gVW0gZGFz
IHp1IHZlcmhpbmRlcm4gc29sbHRlbiB3aXIgYWxsZSBkaWVzZSAKUG9saXppc3RlbiBkaWUgbm9j
aCBuaWNodCB6dSBUw6R0ZXJuIGdld29yZGVuIHNpbmQgdW50ZXJzdMO8dHplbi4gVW5kIAprbGFy
LCBkYXMgaXN0IG51ciBlaW4gRmlsbSwgQUJFUiBpY2gga29ubnRlIGJlaSBkZXIgS0FQTyBBYXJn
YXUgZ2VuYXUgCmRhcyBzZWxiZSBiZW9iYWNodGVuLiBFaW4ganVuZ2VyIFBvbGl6aXN0IGhhdCBt
aXIgZ2VnbGF1YnQsIGRhc3MgaWNoIAprZWluIFRlcnJvcmlzdCBiaW4sIGVyIGlzdCBkYW5uIHp1
IHNlaW5lbSBWb3JnZXNldHp0ZW4gZ2VnYW5nZW4sIGhhdCBkYXMgCmJlYW5zdGFuZGV0IHVuZCB3
dXJkZSB2b20gVm9yZ2VzZXR6dGVuIHJ1bnRlciBnZWthbnplbHQuIERlciBWb3JnZXNldHp0ZSAK
d3Vzc3RlIHZlcm11dGxpY2ggZGFzcyBlcyBzaWNoIG5pY2h0IHVtIGVpbmUgbGVnaXRpbWUgRmVz
dG5haG1lIGhhbmRlbHQuIApEZXIgRXVwaGVtaXNtdXMgZGF6dSBmZWZlLmRlIGlzdCAiV2Vpc3Vu
Z3NnZWJ1bmRlbiIKCgptYXJjQERlc2t0b3AtTXVzaWs6L21udC9jL1VzZXJzL21hcmMvaGFja2Vy
c2NhcmRnYW1lLmNoJCBmaWdsZXQgSGFja2luZwogIF8gICBfICAgICAgICAgICAgXyAgICBfCnwg
fCB8IHwgX18gXyAgX19ffCB8IF8oXylfIF9fICAgX18gXwp8IHxffCB8LyBfYCB8LyBfX3wgfC8g
LyB8ICdfIFwgLyBfYCB8CnwgIF8gIHwgKF98IHwgKF9ffCAgIDx8IHwgfCB8IHwgKF98IHwKfF98
IHxffFxfXyxffFxfX198X3xcX1xffF98IHxffFxfXywgfAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHxfX18vCgoKSWNoIGhhYiBiZWkgQnJhY2sgZWluZSBBY2VyIFByZWRhdG9yIEhl
bGlvcyAzMDAgZ2VrYXVmdCwgR2FtZXIgTGFwdG9wLCAKc29taXQgZWhlciBlaW4gUHJvZHVrdCBm
w7xyIEtpbmRlciwgSnVuZ2VuZGxpY2hlIHVuZCBKdW5nZSBFcndhY2hzZW5lLCAKTWl0dGxlcndl
aWxlIGhhYmUgaWNoCgotIGRpZSBQQ0llIFdpZmkgS2FydGUgYXVzZ2Vib3V0IChAaW9lcnJvcjog
dGhleSByZXB1cnBvc2UgeW91ciB3aWZpLWdlYXIpCgotIHZlcndlbmRlIHN0YXR0IGRlciBlaW5n
ZWJhdXRlbiBFdGhlcm5ldEthcnRlIGVpbmUgVVNCIEV0aGVybmV0IEthcnRlIAooUGNJIEJ1cyAt
PiBadWdyaWZmIGF1ZiBoYWxiZSBIYXJkd2FyZT8pCgotIGhhYiBkYXMgQmV0cmllYnNzeXN0ZW0g
YXVmIGVpbmVtIFVTQi1TdGljayAoU3Bla3VsYXRpb24gTS4yIG1pdCAKRXF1YXRpb25Hcm91cCBt
aXQgRXllRmkgRnVua3Rpb24sIFNvdXRoQnJpZGdlIC0+IEhhbGJlIEhhcmR3YXJlLCBlYmQ/KQoK
PT0+IHNjaG9uIHp3ZWkgbWFsIGhhYmUgaWNoIGJlaSBkZXIgRkhOVyBnZWZyYWd0IG9iIGljaCBU
aW1lc2xvdHMgYXVmIApkZW0gRWxla3Ryb25lbk1pa3Jvc2tvcCBoYWJlbiBrw7ZubnRlIGdlZ2Vu
IEJlemFobHVuZywgZGllIHfDvHJkZW4gamEgCnNvZ2FyIEdlbGQgdmVyZGllbmVuLCBiZXJlaXRz
IHp3ZWkgbWFsIGJpbiBpY2gga3VyeiBkYW5hY2ggaW4gZGllIApQc3ljaGlhdHJpZSB2ZXJzY2hs
ZXBwdCB3b3JkZW4gKGRpZSBncmFkIG5lYmVuIGRlciBGSE5XIGluIEJydWdnIGlzdCkgCnVuZCBt
aXQgaW50ZWxsaWdlbnptaW5kZXJuZGVyIFBzeWNob3BoYXJtYWthIGdlLWhlYWQtc2hvdHRlZCB3
b3JkZW4uIElzdCAKbm9jaCBrZWluIEJld2VpcyBhYmVyIGlyZ2VuZHdpZSBkb2NoIGVoZXIgbWVy
a3fDvHJkaWcuCgpARkVEUE9MOgpTb2xsdGUgZGFzIG1pdCBFcXVhdGlvbkdyb3VwIG1pdCBFeWVG
aSBGdW5rdGlvbiAod2FzIHp1ciBaZWl0IApTcGVrdWxhdGlvbiBpc3QpIHZlcmlmaXppZXJ0IHdl
cmRlbiBrw7ZubmVuLCBrw7ZubnQgaWhyIHZlcm11dGxpY2ggYWxsIApFdXJlIEluZm9ybWF0aWsg
UmVjaHRzZsOkbGxlICJuZXUgYmV3ZXJ0ZW4iLi4uIGRpZXNlIEh5cG90aGVzZSBpc3QgYXVmIApt
ZWluZW0gTWlzdCBnZXdhY2hzZW4sIGRhIGthbm4gZGVyIENDQyBuaWNodHMgZGFmw7xyLiBFcyBp
c3QgYWJlciAKbmFoZWxpZWdlbiwgZGFzcyBpY2ggYWxzIGdsb2JhbCBhbGxlcyB2ZXJzY2hsaW5n
ZW5kZSBhY2h0VGVudGFrbGlnZXMgCklyZ2VuZHdhcyBkZXIgQWxsZXMgZ2VoZWltIGhhbHRlbiBN
w5ZDSFRFLCBzbyBlaW4gRm9yZW5zaXNjaGVyIApGZXN0cGxhdHRlbiBDb250cm9sbGVyIGVpbiBE
b3JuIGltIEF1Z2Ugd8OkcmUKCkxHICYmCnNvcnJ5IGRhc3MgaWNoIGtlaW5lIGJlc3NlcmVuIChh
YmVyIGF1Y2gga2VpbmUgc2NobGVjaHRlcmVuKSBOZXdzIGhhYmUKCgpNYXJjIGpyLiBMYW5kb2x0
CmVpZGcuIGRpcGwuIEluZm9ybWF0aWtlciBIRgoKCkFROiAzNiAobGVpY2h0ZXIgLyBob2NoZnVu
a3Rpb25hbGVyIEF1dGlzbXVzKQpJUTogMTI3CkFsdGVyOiA0MgpHcsO2c3NlOiAxNzMKR2V3aWNo
dDogQzY0Ckdlc2NobGVjaHQ6IDUxJSBNw6RubmNoZW4KVGl0ZWw6IGVpZGcuIGRpcGwuIEluZm9y
bWF0aWtlciBIRgpCZXNpdHplcmluOiB3ZWlibGljaCwgZ2xlaWNoYWx0cmlnCm4tU2VtZXN0ZXIg
U3R1ZGllcnQ6IH4xMCAoaW5vZmZpemllbGwgNDApCkbDvHIgQXV0aXN0ZW4gLyBBc3BpZXMgc3Rl
aGUgaWNoIGdlcm5lIFJlZGUgJiBBbnR3b3J0Li4uCgouLi51bmQgZsO8ciBHbGVpY2hhbHRyaWdl
IHVuZCBKw7xuZ2VyZSBhdWNoCgo4OjM0IFBNIMK3IERlYyAyOCwgMjAxOcK3VHdpdHRlciBXZWIg
QXBwCgojSGFja2Vyc0NhcmRnYW1lICNCaXRjaGluZwpIYWNraW5nIHNwYXducyBKdXN0aWNlIHRv
IGludGVncmF0ZSB0aGUgS8OkY2tzZVtyXSBpbnRvIFNhdGFucyBCbGFjayBXb3JsZAoKaSBnaXZl
IGhlcmVieSB0aGUgcGVybWlzc2lvbiB0byBlcXVhbCBhZ2VkICYgeW91bmdlciBwZW9wbGUgdG8g
aGFjayBteSBzdHVmZgoKTWF5YmUgSXQgd291bGQgYmUgbGVzcyBvZiBhIGNyaW1lPwojQ0NDICMz
NmMzCgpQbGVhc2UgZG9uJ3Qga2lsbCBtZSBvciB1cyEKCi0+ZnJhZ3QgYWJlciBkZW5ub2NoIHp1
ZXJzdCBlaW5lbiBKdXMtU3BlemlhbGlzdGVuIGJlaSBkZW0gSWhyIHdpc3N0LCAKZGFzcyBlciBF
dWNoIG5pY2h0IGRhcyBNZXNzZXIgaW4gZGVuIFLDvGNrZW4gc3RlY2tlbiB3aXJkLCBhcHJvcG9z
IGRlbiAKd2VuaWdlciB0b2xsZW4gRGluZ2VuIHdpZSBkZW0gSGFja2VyUGFyYWdyYXBoZW4gKERF
KQoKCgpBcHJvcG9zIDE3NSBKYWhyZTogKERhcyB3aXJkIGpldHp0IGRhbm4gaW4gZGVyIE51bW1l
cm9sb2dpZSB2ZXJtdXRsaWNoIApkYXMgVHJpZ2dlciJXb3J0IiBnZWdlbiBXaGl0ZUhhdCdzKQoK
SsO8bmdlcmUgd2VubiBpaHIgd29sbHQgdW5kIGVoZXIgbmljaHQgc28gdG9sbGUgSW5mb3MgZ2Vm
dW5kZW4gaGFidCB1bmQgCmRhcyBsaWViZXIgbmljaHQgc2VsYmVyIHR3aXR0ZXJuIG3DtmNodGV0
LCBzY2htaWVzc3QgZGFzIG1pciBpbnMgIjNEIApNb2RlbGwiIG1laW5lciBXb2h1bmcsIEJyZWlm
a2FzdGVuLCBNYWlsLCBUd2l0dGVyLCAuLi4uLi4uLi4uLi4uLi4uLiwgCkFDSFRVTkcsIHdlbm4g
aWNoIHJhdXNmaW5kZW4ga2FubiB3ZXJzIHJlaW4gZ2VzY2htaXNzZW4gaGF0LCB3aXJkIFNhdGFu
IAplcyBhdWNoIHJhdXNmaW5kZW4uLi4KCgoKSWNoIHd1cmRlIGF1ZiBjYS4gMzAga20gdW0gQWFy
YXUgZWluZ2VzY2hyw6Rua3QKCi0+IGVzIGdlaHQgc2Nob24gYXVjaCBtaXQgZGVtIFZlbG8gbmFj
aCBCZXJuIHp1IGZhaHJlbiwgbmFjaHRzLCBiZWkgCnNjaG5lZSB1bmQgcmVnZW4sIGJlaSBtaW51
cyBncmFkZW4sIG9obmUgcmljaHRpZ2UgSGFuZHNjaHVlLCBrb21wbGV0dCAKZHJ1Y2huw6Rzc3Qs
IHVtIGFuIGRlciBCw7xuemxpIFJlYm9vdFBhcnQgZWluIHZpZXJ0ZWwgU3TDvGNrIFBpenphIHp1
IAplcmdhdHRlcm4gKHNvbWl0IHZlcm11dGxpY2ggZGFzIHZpZXJ0ZWwgU3TDvGNrIFBpenphIGRh
c3MgaWNoIG1pciBhbSAKaMOkcnRlc3RlbiBlcmFyYmlldGV0IGhhYmUpLCBBQkVSIGljaCB3w7xy
ZHMgd2llZGVyIHR1biwgaGFiIGRhIGVpbmVuIApmcmV1bmRsaWNoZW4gQXV0aXN0ZW4ga2VubmVu
IGdlbGVybnQgZGVyIGF1Y2ggbWFsIHp3aXNjaGVuZHVyY2ggYW4gZGVyIApDT1NJTiB2b3Jrb21t
dC4KCgpBcnJheUxpc3Qgd2lyZCBuaWNodCB6dSAxMDAlIGtvcnJla3QgdmVyd2VuZGV0LCBhYmVy
IHNvbGwgamEgYXVjaCBudXIgCnVuZ2Vmw6RociBkYXMgS29uemVwdCBhdWZ6ZWlnZW4uCgoKQW0g
MTkuMTAuMjAyMCB1bSAxOTo1NiBzY2hyaWViIGVjaG86Cj4gQW0gMTkuMTAuMjAgdW0gMTc6Mjcg
c2NocmllYiBNYXJjIGpyLiBMYW5kb2x0Ogo+PiBXZW5uIMOkbHRlcmUgSGVycmVuIHZvcnPDpHR6
bGljaCBlY2h0ZSBPcGZlciBhbHMgU2NodXR6c2NoaWxkIGbDvHIgZmFsc2NoZQo+PiBPcGZlciBt
aXNzYnJhdWNoZW4gKGExNCBLYXJ0ZSwgVm9yc2F0eikgdW0gcG9saXRpc2NoZSBaaWVsZSB6dQo+
PiBlcnJlaWNoZW4sIGlzdCBlcyB3aWNodGlnIGRpZSBmYWxzY2hlbiB2b24gZGVuIHJpY2h0aWdl
biBGw6RsbGVuIHp1Cj4+IHVudGVyc2NoZWlkZW4uCj4gCj4gcmVhbGx5IG5vdCB0aGUgcG9pbnQu
Li4uCj4gRHUgd2lyc3QgZGFzIGFscyBuaWNodCBkaXJla3QgYmV0cm9mZmVuZSBQZXJzb24gbmlj
aHQgZWluc2Now6R0emVuCj4ga8O2bm5lbi4gRGFoZXIga2FubiBlcyBhdWNoIG5pY2h0IG1pdGVp
bmthbGt1bGllcnQgd2VyZGVuLiBTcHJpY2ggZGllCj4gVm9yZ2VoZW5zd2Vpc2UgaW4gc29sY2hl
biBGw6RsbGVuIGthbm4gbmljaHQgZGFyYXVmIGJhc2llcmVuLCBzb25kZXJuCj4gbXVzcyBzbyBv
ZGVyIHNvIGVpbmVyIEluc3RydW1lbnRhbGlzaWVydW5nIGVudGdlZ2VuIHdpcmtlbi4KPiAKPiBE
YXJ1bSBpc3QgZXMgd2ljaHRpZyDDpHVzc2VyZSBGYWt0b3Jlbiwgd2VsY2hlIERydWNrIGF1ZiBk
aWUgYmV0cm9mZmVuZQo+IG9kZXIgZGllIGF1c8O8YmVuZGUgUGVyc29uIGF1c8O8YmVuICh6LkIu
IEF1c2xpZWZlcnVuZyBhdWZnci4gZWluZXMKPiBkcm9oZW5kZXMgVmVyZmFocmVuIMO8YmVyIDE3
NSBKYWhyZSBIYWZ0IHdlZ2VuIEFrdGl2aXNtdXMpLCBhdXMgZGVyCj4gVHJhZ3dlaXRlIGRlcyBW
ZXJmYWhyZW5zIG9kZXIgZGVyIEtvbmZyb250YXRpb24gZW50ZmVybnQgd2VyZGVuIGvDtm5uZW4u
Cj4gQW5zb25zdGVuIHdpcmQgZGFzIGFsbGbDpGxsaWdlICRhbmRlcmVfVmVyZmFocmVuIMO8YmVy
IGRpZSBCZWTDvHJmbmlzc2UgZGVyCj4gYmV0cm9mZmVuZW4gUGVyc29uIGdlc3RlbGx0IHVuZCBp
aHIgZ2xlaWNoemVpdGlnIGRpZSBGb2xnZW4gZGFyYXVzIGF1Zgo+IGlociBHZXdpc3NlbiBnZWxh
ZGVuLgo+IE3DtmNodGUgZGllIGF1c8O8YmVuZGUgUGVyc29uIFZlcmFudHdvcnR1bmcgw7xiZXJu
ZWhtZW4gdW5kIHNpY2ggZGVuCj4gRm9yZGVydW5nZW4gZGVyIGJldHJvZmZlbmVuIFBlcnNvbiBz
dGVsbGVuLCBzbyBzaWVodCBzaWUgc2ljaCBhbHMKPiBLb25zZXF1ZW56IG1pdCBkZW0gJGFuZGVy
ZW5fVmVyZmFocmVuIGtvbmZyb250aWVydC4gRWluZSB1bm3DtmdsaWNoZQo+IFNpdHVhdGlvbiBm
w7xyIGFsbGUgQmV0ZWlsaWd0ZW4uCj4gCj4gRGVyIGVybnN0aGFmdGUgRm9rdXMgYXVmIGRpZSBC
ZWTDvHJmbmlzc2UgZGVyIGJldHJvZmZlbmVuIFBlcnNvbiBmw7xocnQKPiBkYXp1LCBkYXNzIGF1
Y2ggRWluZmzDvHNzZSwgd2VsY2hlIGRlciBhdXPDvGJlbmRlbiBQZXJzb24gQW5yZWl6ZSBzZXR6
ZW4KPiBzaWNoIG5pY2h0IHp1IGJldGVpbGlnZW4sIGluIEJldHJhY2h0IGdlem9nZW4gd2VyZGVu
IG3DvHNzZW4uIEltCj4gR2VnZW5zYXR6IGRhenUgc2llaHQgZWluIEZva3VzIGF1ZiBkaWUgYXVz
w7xiZW5kZSBQZXJzb24ga2VpbmVybGVpCj4gUsO8Y2tzaWNodG5haG1lIGF1ZiBCZWTDvHJmbmlz
c2UgYW5kZXJlciBJbnZvbHZpZXJ0ZW4gdm9yIHVuZCBlaW4KPiAnbmV1dHJhbGVyJyBXZWcgYmly
Z3QgZWluIGVyaMO2aHRlcyBSaXNpa28gZsO8ciBlaW5lIEluc3RydW1lbnRhbGlzaWVydW5nCj4g
dW5kIHN0ZWxsdCBpbiBkZXIgUmVhbGl0w6R0IG1laXN0IHdlZGVyIGRlciBiZXRyb2ZmZW5lbiBu
b2NoIGRlcgo+IGF1c8O8YmVuZGVuIFBlcnNvbiBkaWUgbm90d2VuZGlnZSBVbnRlcnN0w7x0enVu
ZyB1bmQgQmVnbGVpdHVuZyB3ZWxjaGUgc2llCj4gYnJhdWNodC4KPiAKPiBXaWVzbyBkaWVzIGF1
ZiBlaW5lciBMaXN0ZSBlaW5lcyBWZXJlaW5zLCB3ZWxjaGVyIHNpY2ggJ21pdCBUZWNobmlrJwo+
IGJlc2Now6RmdGlndCBldHdhcyB6dSBzdWNoZW4gaGF0Pwo+IFRlY2hub2xvZ2llbiBleGlzdGll
cmVuIGltbWVyIGltIHBvbGl0aXNjaGVuIHVuZCBnZXNlbGxzY2hhZnRsaWNoZW4KPiBLb250ZXh0
IHVuc2VyZXIgUmVhbGl0w6R0LiBTaWNoIG1pdCB1bnNlcmVyIHBvbGl0aXNjaGVuIHVuZAo+IGdl
c2VsbHNjaGFmdGxpY2hlbiBSZWFsaXTDpHQgYXVzZWluYW5kZXIgenUgc2V0emVuIGlzdCBlaW5l
IHdpY2h0aWdlCj4gVm9yYXVzc2V0enVuZyBkYWbDvHIgc2ljaCBtaXQgZGVuIENoYW5jZW4gdW5k
IEdlZmFocmVuIHZvbiBUZWNobm9sb2dpZW4KPiBhdXNlaW5hbmRlciB6dSBzZXR6ZW4uIFRlY2hu
aWsgaXN0IGltbWVyIGdlc2VsbHNjaGFmdGxpY2ggdW5kIGlzdCBpbW1lcgo+IHBvbGl0aXNjaC4K
PiBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwo+IEJlcm4g
bWFpbGluZyBsaXN0Cj4gQmVybkBjaGFvc3RyZWZmLmNoCj4gaHR0cHM6Ly9zb25uZS5hbHQtZjQu
Y2gvY2dpLWJpbi9tYWlsbWFuL2xpc3RpbmZvL2Jlcm4KPiAKCgoKCkFtIDE5LjEwLjIwIHVtIDA4
OjU1IHNjaHJpZWIgTWFyYyBqci4gTGFuZG9sdDoKPiBEYXMgbWl0IGRlbSAiVmVyZ2V3YWx0aWdl
ciBUZXJyb3Jpc3RlbiIgc2NoZWludCBpcmdlbmR3aWUgw7xibGljaGVzCj4gVm9yZ2VoZW4gZGll
c2VyIE1lbnNjaGVuIHp1IHNlaW4sIHN0ZWh0IHZlcm11dGxpY2ggaW4gZGVyZW4gSGFuZGJ1Y2gu
CgpVZmYuLi4uIMOkaG0uLi4gbWVuc2NoLi4uCkluc3RydW1lbnRhbGlzaWVydW5nIHZvbiBCZXRy
b2ZmZW5lbiB2b24gc2V4dWVsbGVyIGJ6dy4gc2V4dWFsaXNpZXJ0ZXIKR2V3YWx0IGlzdCBrbGFy
IGVpbiBQcm9ibGVtLiBLZWluZSBGcmFnZS4gTGVpZGVyIGhhdCB1bnNlcmUgR2VzZWxsc2NoYWZ0
CmVpbmUgc2VociBsYW5nZSBHZXNjaGljaHRlIGRhbWl0IGRpZSBCZWTDvHJmbmlzc2UgdW5kIFfD
vG5zY2hlIHZvbgpCZXRyb2ZmZW5lbiB6dSBpZ25vcmllcmVuIHVuZCBkaWUgV3V0IGRlciBCZXbD
tmxrZXJ1bmcgZsO8ciBhbmRlcmUgWmllbGUKenUgbnV0emVuLiBTbyB3ZXJkZW4gZGllIMOcYmVy
Z3JpZmZlIGFscyBHcnVuZCBkYWbDvHIgYW5nZWdlYmVuIHdpZXNvIGRpZQpnZXdhbHRhdXPDvGJl
bmRlIFBlcnNvbiB3ZWdlbiAkYW5kZXJlbl9EaW5nZW4KdmVyZm9sZ3QvdmVydXJ0ZWlsdC9nZWZv
bHRlcnQvd2VnZ2VzcGVycnQgd2VyZGVuIHNvbGwuCgpOYXTDvHJsaWNoIGlzdCBlcyB2w7ZsbGln
IGhpcm5yaXNzaWcgZGFzcyBlaW4gTWVuc2NoIHdlZ2VuICRpcmdlbmR3YXMgaW4KZWluZXIgYW1l
cmlrYW5pc2NoZW4gQmxhY2tzaXRlIHZlcnNjaHdpbmRlbiBzb2xsIHVuZCBkYWR1cmNoIGRlcgpi
ZXRyb2ZmZW5lbiBQZXJzb24gZGllIE3DtmdsaWNoa2VpdCB2ZXJ3ZWhydCB3aXJkIGRpZSBhdXPD
vGJlbmRlIFBlcnNvbiB6dQprb25mcm9udGllcmVuIHVuZC9vZGVyIGVpbmUgRm9ybSB2b24gS29t
cGVuc2F0aW9uIHp1IGZvcmRlcm4uIEVzIGlzdAp2ZXJhbnR3b3J0dW5nc2xvcyBiZXRyb2ZmZW5l
IFBlcnNvbmVuIGluIHNvIGVpbmUgU2l0dWF0aW9uIHp1IGJyaW5nZW4uCgpEYXMgZWluemlnIHNp
bm52b2xsZSBkYXNzIHdpciBkYWdlZ2VuIHR1biBrw7ZubmVuLCBpc3QgdW5zIGRhZsO8cgplaW56
dXNldHplbiBkYXNzIGRpZSBCZWTDvHJmbmlzc2Ugdm9uIEJldHJvZmZlbmVuIGjDtmhlcmUgUHJp
b3JpdMOkdCBoYWJlbgpzb2xsdGUgYWxzIHouQi4gZWluIEF1c2xpZWZlcnVuZ3NhbnRyYWcuIE51
ciBpbmRlbSB3aXIgZGllIEJldHJvZmZlbmVuCmVybnN0aGFmdCB1bnRlcnN0w7x0emVuLCBrw7Zu
bmVuIHdpciBlaW5lciBJbnN0cnVtZW50YWxpc2llcnVuZwplbnRnZWdlbndpcmtlbi4KClfDvHJk
ZSBzaWNoIHVuc2VyZSBHZXNlbGxzY2hhZnQsIHVuZCB3aXIgYWxzIFRlaWwgZGF2b24sIHN0w6Ry
a2VyIGRhZsO8cgplaW5zZXR6ZW4gZGFzcyBCZXRyb2ZmZW5lIHZvbiBzZXh1ZWxsZXIgYnp3LiBz
ZXh1YWxpc2llcnRlbiDDnGJlcmdyaWZmZW4KbWl0IGlocmVuIFfDvG5zY2hlbiB1bmQgQmVkw7xy
Zm5pc3NlbiBlcm5zdGdlbm9tbWVuIHdlcmRlbiwgd8OkcmUgZXMKd2VzZW50bGljaCBzY2h3aWVy
aWdlciBpaHJlIEVybGVibmlzc2Ugc28genUgaW5zdHJ1bWVudGFsaXNpZXJlbi4KCkdydWVzcywg
ZWNobwoKCgpQLlM6IEljaCBtw7ZjaHRlIGRpciBuYWhlbGVnZW4gZGljaCBtYWwgbWl0IGRlbiBo
w6R1Zmlnc3RlbiBGZWhsZXJuIGluIGRlcgpWZXJ3ZW5kdW5nIHZvbiBLb25kb21lbiBhdXNlaW5h
bmRlciB6dSBzZXR6ZW4uIFp1IGVuZ2UgUHLDpHNlcnZhdGl2ZQp6ZXJyZWlzc2VuIGxlaWNodCwg
enUgd2VpdGUgcnV0c2NoZW4gYWIuIFZpZWxlIHZlcndlbmRlbiBlaW5mYWNoIGRpZQonU3RhbmRh
cmQnLUdyw7Zzc2Ugb2RlciB3aXNzZW4gbmljaHQgZGFzcyBkZXIgVW1mYW5nLCB1bmQgbmljaHQg
ZGllCkzDpG5nZSwgZsO8ciBkaWUgS29uZG9tLUdyw7Zzc2UgZW50c2NoZWlkZW5kIGlzdC4gRGEg
YnJhdWNodHMga2VpbmUKTWFuaXB1bGF0aW9uIGbDvHIuClAuUC5TOiBCaXR0ZSB1bnRlcmxhc3Mg
aW4gWnVrdW5mdCBBdXNzYWdlbiB3ZWxjaGUgUGVyc29uIGF1ZmdydW5kIGlocmVzCkdlc2NobGVj
aHQgYmV1cnRlaWxlbi4gTmllbWFuZCBpc3QgYXVmZ3J1bmQgZGVzIEdlc2NobGVjaHRzICd6dSBi
bMO2ZCcuCkluIGtlaW5lbSBGYWxsLiBTb2xjaGUgRm9ybXVsaWVydW5nZW4gbWFjaGVuIExldXRl
LCB6dSBSZWNodCwgd8O8dGVuZCB1bmQKaGludGVybGFzc2VuIGRlbiDDvGJsZW4gQmVpZ2VzY2ht
YWNrIHZvbiBGcmF1ZW5oYXNzLgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpCZXJuIG1haWxpbmcgbGlzdApCZXJuQGNoYW9zdHJlZmYuY2gKaHR0cHM6Ly9z
b25uZS5hbHQtZjQuY2gvY2dpLWJpbi9tYWlsbWFuL2xpc3RpbmZvL2Jlcm4KCgoKCkFtIDE5LjEw
LjIwIHVtIDA0OjEzIHNjaHJpZWIgTWFyYyBqci4gTGFuZG9sdDoKPiBJY2ggZmluZGUgbmljaHQg
ZGFzIG1hbiBkYXMgYmxvY2tlbiBzb2xsdGUsIEFCRVIgc2lubnZvbGxlcndlaXNlCj4gYWxsZW5m
YWxscyBlaW5lIHp3ZWl0ZSBMaXN0ZSBmw7xyIGRpZWplbmlnZW4sIGRpZSBzY2hvbiBzbyB3ZWl0
IGltCj4gQ3liZXJXQVIgZ2VzY2hlaGVuIGludm9sdmllcnQgc2luZCBzbyBkYXNzIGRpZSBkYSBl
aCBuaWNodCBtZWhyIHJhdXMKPiBrb21tZW4uCgpFcyB0dXQgbWlyIHNlaHIgbGVpZCBmw7xyIGRp
Y2gsIGRhc3MgYW5zY2hlaW5lbmQgTlNBLCBDSUEsIFNhdGFuIHVuZApqZXR6dCBhdWNoIG5vY2gg
ZGFzIHNjaHdlaXplciBNaWxpdMOkciBoaW50ZXIgZGlyIGhlciBpc3QuIFdpZSBpY2ggZGVpbmVt
ClR3aXR0ZXItQWNjb3VudCBlbnRub21tZW4gaGFiZSBpbmtsLiBwc3ljaG9sb2dpc2NoZXIgS3Jp
ZWdzZsO8aHJ1bmcgZHVyY2gKRGllYnN0YWhsIGRlaW5lcyBGYWhycmFkcy4KCldpciBrw7ZubmVu
IHVuZCB3b2xsZW4gZGlyIGhpZXIgbWl0IGRpZXNlbSBBdXNtYXNzIGRlaW5lciBQcm9ibGVtZSBu
aWNodAp3ZWl0ZXJoZWxmZW4sIGF1Y2ggbmljaHQgbWl0IGVpbmVyIHNlcGFyYXRlbiBNYWlsaW5n
bGlzdGUuCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkJl
cm4gbWFpbGluZyBsaXN0CkJlcm5AY2hhb3N0cmVmZi5jaApodHRwczovL3Nvbm5lLmFsdC1mNC5j
aC9jZ2ktYmluL21haWxtYW4vbGlzdGluZm8vYmVybgoKCgoKCkbDvHIgamVuZSBhdWYgZGllc2Vy
IExpc3RlIHdlbGNoZSBzaWNoIG1pdCBkZW4gQmVncmlmZmxpY2hrZWl0ZW4gbmljaHQKYXVza2Vu
bmVuOgoKJ1NleHVlbGxlIEludGVncml0w6R0JyBiZXplaWNobmV0IHNvd29obCBkYXMgUmVjaHQg
w7xiZXIgc2VpbmUgU2V4dWFsaXTDpHQKZnJlaSB6dSBiZXN0aW1tZW4gdW5kIHZvciDDnGJlcmdy
aWZmZW4gb2RlciBTZXh1YWxkZWxpa3RlbiBTY2h1dHogenUKZmluZGVuLCBhbHMgYXVjaCBkYW1p
dCBlaW5oZXJnZWhlbmRlIFdlcnR2b3JzdGVsbHVuZ2VuLiBFcyBoYW5kZWx0IHNpY2gKZGFiZWkg
dW0gUmVjaHRlIHdlbGNoZSB2b24gRnJhdWVuYmV3ZWd1bmdlbiwgU2Nod3VsZW4tIHVuZApMZXNi
ZW5iZXdlZ3VuZ2VuLCBzb3dpZSBNZW5zY2hlbnJlY2h0cy0sIFRyYW5zKi0gdW5kCkludGVyKi1P
cmdhbmlzYXRpb25lbiBoYXJ0IGVya8OkbXBmdCB3dXJkZW4vd2VyZGVuLiBJc3QgYWxzbyBrZWlu
ZSBXYWZmZQppbiBlaW5lbSBDeWJlcndhciB1bSBNZW5zY2hlbiB1bXp1YnJpbmdlbi4uLiB3dGYu
Li4KCkFtIDE4LjEwLjIwIHVtIDIxOjA5IHNjaHJpZWIgZWNobzoKPiBAYWRtaW46IEhhYmVuIHdp
ciBlaW5lIEJsb2NrbGlzdD8gV2lyZCB3b2hsIGxhbmdzYW0gbm90d2VuZGlnLi4uCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkJlcm4gbWFpbGluZyBsaXN0
CkJlcm5AY2hhb3N0cmVmZi5jaApodHRwczovL3Nvbm5lLmFsdC1mNC5jaC9jZ2ktYmluL21haWxt
YW4vbGlzdGluZm8vYmVybgoKCgoKCkBhZG1pbjogSGFiZW4gd2lyIGVpbmUgQmxvY2tsaXN0PyBX
aXJkIHdvaGwgbGFuZ3NhbSBub3R3ZW5kaWcuLi4KCkFtIDE2LjEwLjIwIHVtIDAzOjIwIHNjaHJp
ZWIgTWFyYyBqci4gTGFuZG9sdDoKPiBIYWxsaSBIYWxsbyBJaHIKPgo+IHNvcnJ5IGbDvHIgZGll
c2UgTmV3cywgZGllIGlzdCBqZXR6dCBlaGVyIG5pY2h0IHNvIHRvbGwgYWJlciBqw7xuZ2VyZSB6
dQo+IHdhcm5lbiBpc3QgQUxURVJOQVRJVkxPUwo+Cj4gRXMgc2NoZWludCBzY2hlaW5iYXIgdW50
ZXIgZGVuIE9mZml6aWVyZW4gaW4gQWFyYXUgc28gZWluZSBBcnQKPiBnZWlzdGVza3JhbmtlcyAi
U3BpZWwiIHp1IHNlaW4sIGRlbiAicGVyZmVrdGVuIiBNb3JkIHp1IGJlZ2VoZW4gb2Rlcgo+IGJl
Z2VoZW4genUgPj4+IHdvbGxlbiA8PDwuCj4KPiB6LkIgMTk2MGVyIE9mZml6aWVyZSB0cmVpYmVu
IHouQi4gw7xiZXIgZGllIFNleHVlbGxlIEludGVncml0w6R0IGVpbmVuCj4gMTk3MGVyIE9mZml6
aWVyZXIgZGF6dSBhbiBlaW5lbiBHbGVpY2hhbHRyaWdlbiB6dSBlcm1vcmRlbiBiencuIGluIGRl
bgo+IFN1aXppZCB6dSB0cmVpYmVuIHouQi4gbWl0IGdlLVBob3RvLVNob3B0ZW0gUG9ybm8gTcO8
bGwgZGVyIMO8YmVyIG5pY2h0Cj4gZ2FueiBkdXJjaHNpY2h0aWdlIEthbsOkbGUgaW4gc2VpbiBX
ZWx0YmlsZCBnZXNjaG9iZW4gd2lyZC4gQnp3Lgo+IGhldXR6dXRhZ2Ugd8OkcmVuIGVzIGFsbGVu
ZmFsbHMgc29nYXIgRGVlcCBGYWtlcyBWaWRlb3MuIERlciBtw7xzc3RlIGRlbgo+IE1vcmQgZGFu
biB6LkIuIGVpbmVtIDE5ODBlciBhbmjDpG5nZW4gKEhhY2tlcnNDYXJkZ2FtZS5jaCAtPiBBZ2Ug
QmFzZWQKPiBBY2Nlc3MpIHVuZCBhbGxlbmZhbGxzIGF1Y2ggUGhvdG8tc2hvcHBlbi4gRGFzIGZ1
bmt0aW9uaWVydCB2b3JhbGxlbSBiZWkKPiBBdXRpc3Rlbiwgd2VpbCB0aWVmZSBBbWJpZ3VpdMOk
dHMtVG9sZXJhbnogdW5kIHZlcm11dGxpY2ggYWxsZSB6dSAxMDAlCj4gdHJldSwgdW5kIGljaCBo
w6R0dGUgZ2VzYWd0IGRlciBTY2hhY2h6dWcgIkF1dGlzbXVzLUZyw7xoZXJrZW5udW5nIiBvZGVy
Cj4gZGVyIFNjaGFjaHp1ZyBlaW5lbSBBdXRpc3RlbiBkZW4gU2NoaXpvcGhyZW5lbiBhbnp1aMOk
bmdlbiB3w6RyZXdlaWwKPiBBdXRpc3RlbiBuaWNodCBhbmRlcnMga8O2bm5lbiBhbHMgInRyaWVi
Z2VzdGV1ZXJ0IiB1bmdlbMO2c3RlIFB1enpsZXMKPiAobmljaHQgZGllIG9sbGVuIGF1cyBLYXJ0
b24sIGRpZSBzaW5kIGRvb2YpIGzDtnNlbiB6dSBtw7xzc2VuLiBVbSBkZW4KPiBBdXRpc3RlbiBK
dWxpYW4gQXNzYW5nZSB6dSB6aXRpZXJlbjogIi4uLnNvbGNoZSBEaW5nZSB6dSB2ZXJwZXR6ZW4K
PiBzY2hyw6Rua3QgZGllIFTDpHRlcnNjaGFmdCBlaW4gZGllc2VuIC9TY2hhY2h6dWcvIHdlaXRl
cmhpbiBtaXNzYnJhdWNoZW4KPiB6dSBrw7ZubmVuLiBBbGxlIHNpbmQgYXVmIGRlbSBBdXRpc211
cy1TcGVrdHJ1bSwgaW5zYmVzb25kZXJlIEtpbmRlci4KPgo+IEljaCBtYWcgZXMgbmljaHQgcnVt
IHp1IGtvbW1hbmRpZXJlbiwgYWJlciBkaWUgR3JhZmlrIHVwZGF0ZS5wbmcgaXN0Cj4gd2ljaHRp
Zy4gPj4+IELDpGxsZWJhZCBiZXNjaMO8dHplbiB2b3JtIE1pbGl0w6RyIDw8PC4gQW0gYmVzdGVu
IHdpZSBkZXIKPiBTdGVmYW4gZ2FyIG5pY2h0IGVyc3QgaW4gZGllIFJla3J1dGVuc2NodWxlIGdl
aGVuLiBBbHNvIGRpZXNlcyBTeXN0ZW0KPj4+PiB3w7xyZGUgPDw8IGxvZ2lzY2hlcndlaXNlIGF1
Y2ggZGllIGrDvG5nZXJlbiBHZW5lcmF0aW9uZW4gaW4gaWhyCj4gWndhbmdzbWFzc25haG1lbiBT
eXN0ZW0gZWlucmVpaGVuIHdvbGxlbiwgb2RlciBpbiBpaHJlICJMZWdpb25lbiBkZXIKPiBsZWJl
bmRlbiBUb3RlbiIgdW0gTGlsbyAmIFN0aWNoIHp1IHppdGllcmVuLgo+Cj4gVW5kIGljaCBkZW5r
ZSBtYW4ga2FubiB1bmQgbXVzcyB2ZXJoaW5kZXJuLCBkYXNzIHouQi4gMjAgasOkaHJpZ2UKPiBP
ZmZpemllcmUgZGllIG5vY2ggbmljaHQgaW0gWndhbmdzbWFzc25haG1lbiBTeXN0ZW0gc2luZCBy
ZWNodHplaXRpZyBkYQo+IHJhdXMgenUgaG9sZW4uCj4KPiAiSmVkZXIgaGF0IHNlaW5lIExlaWNo
ZSBpbSBLZWxsZXIiIDwtIG7DtiwgYWJlciB1bnRlcmdlc2Nob2JlbmUgTGVpY2hlbgo+IGFsbGVu
ZmFsbHMuCj4KPiBEYSBpc3QgcmljaHRpZyB2aWVsIHByb3ByaWV0w6RyZSBTY2hlaXNzLUhhY2tp
bmctU29mdHdhcmUgYmV0ZWlsaWd0LCBtaXIKPiBoYWJlbiBzaWUgc29nYXIgVHdlZXRzIGRlciBs
ZXR6dGVuIDEyIFN0dW5kZW4gZ2Vsw7ZzY2h0LCAoTmFtZW5zbmVubnVuZwo+IGRlcyBNw7ZyZGVy
cyB2b24gVG9iaWFzIE1vc2VyKSBvYndvaGwgZGVyIENvbXB1dGVyIMO8YmVyIDMgU3RlY2tsZWlz
dGVyCj4gU2NoYWx0ZXIgaW4gU2VyaWUgdm9tIFN0cm9tIGdldHJlbm50IHdhciB1bmQgYXVmIFR3
aXR0ZXIgc2VsYmVyIGhhYmUgaWNoCj4gTXVsdGlmYWN0b3IgQXV0aGVudGljYXRpb24uIEFsc28g
RW5kcG9pbnQgdW5kIFBhc3N3b3J0IGlzdAo+IGF1c2dlc2NobG9zc2VuLiBWZXJtdXRsaWNoIG1p
bGl0w6RyaXNjaGUgWnVnw6RuZ2UgKC0+IHNpZWhlIEFSUEFuZXQsIGJ6dy4KPiBzaWVoZSBiZXNz
ZXIgbmljaHQpLiBKYWtlIHNhZ3QgIklmIHlvdSBtZXNzIHdpdGggYSBtaWxpdGFyeSBkaWN0YXRv
cnNoaXAKPiBpdCBtZXNzZXMgd2l0aCB5b3UgYmFjayIgdW5kIGljaCBow6R0dGUgbWFsIHNwZWt1
bGF0aXYgc3Bla3VsaWVydCBmw7xyCj4gQWFyYXUgZ2lsdCBkYXMgZ2VuYXUgc28gd2llIGbDvHIg
VVNBLgo+Cj4gU2NobHVzc2ZvbGdlcnVuZzoKPiBKw7xuZ2VyZSBiaXR0ZSBlaW5lbiBhdWYgc29m
YS5wbmcgbWFjaGVuLCB1bmQgaWNoIG1hY2ggZGFubiBtYWwgZWluZW4gYXVmCj4gaWNlLWxha2Ut
Y29tcHV0ZXIuanBnLCBzcHJpY2ggSG9uZXlQb3QgdW5kIHVuZnJlaXdpbGxpZ2UKPiBCZXLDvGhy
dW5nc0Zsw6RjaGUgbWl0IGRlbmVuLCBkaWUgc2Nob24gaW0gWndhbmdzbWFzc25haG1lbiBTeXN0
ZW0gU2F0YW5zCj4gc2luZCB1bmQgYW5nZXRyaWViZW4gd2VyZGVuIG1pciBkYXMgbGViZW4gbWF4
aW1hbCB1bmJlcXVlbSB6dSBtYWNoZW4uCj4KPiBEaWUgR3JhZmlrIHVwZGF0ZS5wbmcgZsOkbmd0
IG1hY2htYWwgc2Nob24gaW0gYWx0ZXIgdm9uIDYgSmFocmVuIGFuLCBpbgo+IGRlbSB6LkIuIGRp
ZSBzaWNoIHRlbmRlbnppZWxsIGVpbiBiaXNzY2hlbiBzdWJvcHRpbWFsIHZlcmhhbHRlbmRlIGpl
dHp0Cj4gcGVuc29pb25lcnRlIChiZXNvZmZlbmU/KSBNdXR0ZXIgZGllIGrDvG5nZXJlbiBHZXNj
aHdpc3RlciBhbnRyZWlidCBkZW4KPiBCcnVkZXIgd2VuZ2UgVGF1Ym5lc3NlbG4gYXVzenVsYWNo
ZW4sIHdvIGRpZSBKw7xuZ2VyZW4gbmljaHRzIGRhZsO8cgo+IGvDtm5uZW4sIGRpZSBzaW5kIG5v
Y2ggbWVociBhdXNnZWxpZWZlcnQgYWxzIGRhcyDDpGx0ZXN0ZSBLaW5kLgo+Cj4KPiBHcsO8c3Nj
aGVuCj4gTWFyYyBqci4gTGFuZG9sdAo+IGVpZGcuIGRpcGwuIEluZm9ybWF0aWtlciBIRgo+Cj4g
U2luY2VyZWx5IHlvdXIgSGFja2Vyc0NhcmRnYW1lLmNoCj4KPiBfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwo+IEJlcm4gbWFpbGluZyBsaXN0Cj4gQmVybkBj
aGFvc3RyZWZmLmNoCj4gaHR0cHM6Ly9zb25uZS5hbHQtZjQuY2gvY2dpLWJpbi9tYWlsbWFuL2xp
c3RpbmZvL2Jlcm4KPgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpCZXJuIG1haWxpbmcgbGlzdApCZXJuQGNoYW9zdHJlZmYuY2gKaHR0cHM6Ly9zb25uZS5h
bHQtZjQuY2gvY2dpLWJpbi9tYWlsbWFuL2xpc3RpbmZvL2Jlcm4KCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkJlcm4gbWFpbGluZyBsaXN0CkJlcm5AY2hh
b3N0cmVmZi5jaApodHRwczovL3Nvbm5lLmFsdC1mNC5jaC9jZ2ktYmluL21haWxtYW4vbGlzdGlu
Zm8vYmVybgo=
